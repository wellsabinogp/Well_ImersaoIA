# -*- coding: utf-8 -*-
"""MoM da Imersão IA da Alura 2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12ADcrrbzckgnbSyt2fVxzRLgbE7RlDcK

MEU TCC DA IMERSÃO IA DA ALURA
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip -q install google-genai

# Configura a API Key do Google Gemini

import os
from google.colab import userdata

os.environ["GOOGLE_API_KEY"] = userdata.get('GOOGLE_API_KEY')

# Configura o cliente da SDK do Gemini

from google import genai

client = genai.Client()

MODEL_ID = "gemini-2.0-flash"

# Instalar Framework ADK de agentes do Google ################################################
!pip install -q google-adk

from google.adk.agents import Agent
from google.adk.runners import Runner
from google.adk.sessions import InMemorySessionService
from google.adk.tools import google_search
from google.genai import types  # Para criar conteúdos (Content e Part)
from datetime import date
import textwrap # Para formatar melhor a saída de texto
from IPython.display import display, Markdown # Para exibir texto formatado no Colab
import requests # Para fazer requisições HTTP
import warnings

warnings.filterwarnings("ignore")

"""#ATENÇÃO!!!

O CÓDIGO ABAIXO SÓ FUNCIONARÁ PARA MIM POIS SOMENTE EU TENHO ACESSO AO MEU DRIVE PESSOAL ONDE ESTÃO OS PDFS QUE EU GEREI A PARTIR DO PERPEXITY RESUMINDO OS VIDEOS DO YOUTUBE DAS AULAS, POIS PELO GEMINI NÃO FUNCIONOU. DAÍ FIZ UM A UM O RESUMO DAS AULAS DE VIDEO, SALVEI NO MEU DRIVE E IMPLEMENTEI PELA PRIMEIRA VEZ O ACESSO AO DRIVE, QUE NÃO FOI DADO NO CURSO, COM O AUXILIO DO GEMINI PEDINDO PARA ELE GERAR CODIGO PYTHON POR MIM

MAS SE VC É CURIOSÃO E QUER VER O CÓDIGO FUNCIONANDO, ALTERE A CÉLULA ABAIXO PARA UMA PASTA EXISTENTE NO TEU GOOGLE DRIVE E COLOQUE 1 OU MAIS PDFS DE QQ ASSUNTO LÁ SÓ PARA VER QUE FUNCIONA
# Defina o caminho para a pasta dos PDFs
pasta_pdfs = '/content/drive/MyDrive/Imersão IA da Alura'
"""

# Pergunta ao Gemini uma informação utilizando a busca do Google como contexto
from google.colab import drive
drive.mount('/content/drive')
import os

# Define o caminho para a pasta no seu Google Drive
caminho_pasta = '/content/drive/MyDrive/Imersão IA da Alura'

# Verifica se a pasta existe
if os.path.isdir(caminho_pasta):
    print(f"A pasta '{caminho_pasta}' foi encontrada no seu Google Drive.")

    # Opcional: Listar os arquivos dentro da pasta
    arquivos_na_pasta = os.listdir(caminho_pasta)
    print("Arquivos dentro da pasta:")
    for arquivo in arquivos_na_pasta:
        print(f"- {arquivo}")
else:
    print(f"A pasta '{caminho_pasta}' não foi encontrada no seu Google Drive. Verifique se o nome está correto e se a pasta existe.")

!pip install PyPDF2 nltk

import os
import PyPDF2
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import sent_tokenize, word_tokenize

# Certifique-se de baixar os recursos necessários do NLTK (execute apenas uma vez)
try:
    stopwords.words('portuguese')
except LookupError:
    nltk.download('stopwords')
try:
    sent_tokenize('Exemplo.')
except LookupError:
    nltk.download('punkt')

# Download the punkt_tab resource for Portuguese
try:
    # Attempt to load the punkt_tab resource for Portuguese
    nltk.data.find('tokenizers/punkt_tab/portuguese/')
except LookupError:
    # If not found, download it
    nltk.download('punkt_tab')


def extrair_texto_pdf(caminho_arquivo):
    """Extrai o texto de um arquivo PDF."""
    texto = ""
    try:
        with open(caminho_arquivo, 'rb') as arquivo_pdf:
            leitor_pdf = PyPDF2.PdfReader(arquivo_pdf)
            for pagina_num in range(len(leitor_pdf.pages)):
                pagina = leitor_pdf.pages[pagina_num]
                texto += pagina.extract_text()
    except Exception as e:
        print(f"Erro ao processar o arquivo '{os.path.basename(caminho_arquivo)}': {e}")
    return texto

def resumir_texto(texto, num_sentencas=3):
    """Gera um resumo de um texto."""
    if not texto:
        return ""

    sentencas = sent_tokenize(texto, language='portuguese')
    palavras = word_tokenize(texto.lower(), language='portuguese')
    stop_words = set(stopwords.words('portuguese'))
    palavras_filtradas = [palavra for palavra in palavras if palavra.isalnum() and palavra not in stop_words]

    frequencia_palavras = nltk.FreqDist(palavras_filtradas)
    sentencas_pontuadas = {}

    for i, sentenca in enumerate(sentencas):
        for palavra in word_tokenize(sentenca.lower(), language='portuguese'):
            if palavra in frequencia_palavras:
                if i not in sentencas_pontuadas:
                    sentencas_pontuadas[i] = 0
                sentencas_pontuadas[i] += frequencia_palavras[palavra]

    sentencas_ordenadas = sorted(sentencas_pontuadas, key=sentencas_pontuadas.get, reverse=True)
    top_sentencas = sorted(sentencas_ordenadas[:num_sentencas])

    return ' '.join([sentencas[i] for i in top_sentencas])

# Define o caminho para a pasta dos PDFs
pasta_pdfs = '/content/drive/MyDrive/Imersão IA da Alura'

# Lista todos os arquivos na pasta
arquivos_na_pasta = os.listdir(pasta_pdfs)

# Filtra apenas os arquivos com extensão .pdf
arquivos_pdf = [arquivo for arquivo in arquivos_na_pasta if arquivo.lower().endswith('.pdf')]

# Processa cada arquivo PDF encontrado
if arquivos_pdf:
    print(f"Encontrei {len(arquivos_pdf)} arquivos PDF na pasta '{pasta_pdfs}':")
    for arquivo_pdf in arquivos_pdf:
        caminho_completo = os.path.join(pasta_pdfs, arquivo_pdf)
        print(f"\nArquivo: {arquivo_pdf}")
        texto = extrair_texto_pdf(caminho_completo)
        if texto:
            #Comentei a função resumo pois quero usar o Gen AI para fazer isso de maneira estruturada
            #resumo = resumir_texto(texto, num_sentencas=3) # Você pode ajustar o número de sentenças no resumo
            print("Segue o que foi discutido na aula:")
            # Em vez de --> print(resumo)
            # Exibe a resposta "bunitinha" na tela
            display(Markdown(f"Resposta:\n {texto}"))
        else:
            print("Não foi possível extrair texto deste arquivo.")
else:
    print(f"Nenhum arquivo PDF encontrado na pasta '{pasta_pdfs}'.")

"""#ATENÇÃO!!!

O CÓDIGO ACIMA SÓ FUNCIONARÁ PARA MIM POIS SOMENTE EU TENHO ACESSO AO MEU DRIVE PESSOAL ONDE ESTÃO OS PDFS QUE EU GEREI A PARTIR DO PERPEXITY RESUMINDO OS VIDEOS DO YOUTUBE DAS AULAS, POIS PELO GEMINI NÃO FUNCIONOU. DAÍ FIZ UM A UM O RESUMO DAS AULAS DE VIDEO, SALVEI NO MEU DRIVE E IMPLEMENTEI PELA PRIMEIRA VEZ O ACESSO AO DRIVE, QUE NÃO FOI DADO NO CURSO, COM O AUXILIO DO GEMINI PEDINDO PARA ELE GERAR CODIGO PYTHON POR MIM

MAS SE VC É CURIOSÃO E QUER VER O CÓDIGO FUNCIONANDO, ALTERE A CÉLULA ABAIXO PARA UMA PASTA EXISTENTE NO TEU GOOGLE DRIVE E COLOQUE 1 OU MAIS PDFS DE QQ ASSUNTO LÁ SÓ PARA VER QUE FUNCIONA
# Defina o caminho para a pasta dos PDFs
pasta_pdfs = '/content/drive/MyDrive/Imersão IA da Alura'

SENDO ASSIM, VOU COLAR AQUI TODO O TEXTO GERADO PELO CÓDIGO ACIMA, NO COPY PASTE MESMO :

Encontrei 6 arquivos PDF na pasta '/content/drive/MyDrive/Imersão IA da Alura':

Arquivo: Resumo Aula 0 - MasterClass - Como a IA aprendeu a falar.pdf
Segue o que foi discutido na aula:
Resposta: Aula 0 = https://youtu.be/_xV9Pcvkq_Y Aula 1 = https://www.youtube.com/watch?v=PzTBbxEGmYo Aula 2 = https://youtu.be/BOfY6FKbqE Aula 3 = https://www.youtube.com/watch?v=PldyIefUPOg&t=1s Aula 4 = https://www.youtube.com/watch?v=7xco9igjUAQ&t=1s Aula 5 = https://www.youtube.com/watch?v=_CzMiNTDLMI Aqui está um resumo detalhado da Aula 0 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial: Olá, seguem os links dos videos da imersão IA da Alura: Aula 0 Introdução e História da Inteligência Artificial Objetivo da aula: Preparar os alunos para a imersão, apresentando a história da inteligência artificial IA) desde a origem do termo até os avanços recentes, além de introduzir uma ferramenta de estudo inovadora. Ferramenta NotebookLM do Google: Uma ferramenta que permite importar e organizar conteúdos de diversas fontes PDFs, sites, vídeos, documentos) para estudo assistido por IA. Pode gerar mapas mentais, resumos, notas e responder perguntas baseadas no material importado, facilitando o aprendizado. História da IA Primórdios (pré-1950 A ideia de máquinas pensantes tem raízes antigas, mas o marco inicial real é a invenção do computador digital na década de 1940. Em 1943, McCulloch e Pitts criaram o modelo matemático do neurônio artificial, inspirado no funcionamento do cérebro humano, usando lógica binária. Alan Turing, considerado o pai da computação, publicou em 1950 o artigo "Computing Machinery and Intelligence", propondo o Teste de Turing para avaliar se uma máquina pode exibir comportamento inteligente indistinguível do humano. Década de 1950Este resumo da Aula 0 traz uma visão geral da evolução da IA, preparando os alunos para entender os conceitos e tecnologias atuais. Se desejar, posso preparar resumos similares para as outras aulas 1 a 5) com base nos conteúdos disponíveis. ⁂Em 1956, na conferência de Dartmouth, John McCarthy cunhou o termo "inteligência artificial". Os primeiros programas de xadrez e os primeiros sistemas baseados em redes neurais foram desenvolvidos. Décadas de 1960 e 1970 Houve grande entusiasmo com sistemas especialistas e chatbots primitivos, como o ELIZA, que simulava conversas simples. Porém, as limitações técnicas e o poder computacional insuficiente levaram a dificuldades para resolver problemas complexos. Invernos da IA Nos anos 70 e final dos anos 80, ocorreram períodos chamados "invernos da IA", quando o interesse e o financiamento diminuíram devido a expectativas não cumpridas e limitações técnicas. Renascimento no século 21 A partir dos anos 2000, a IA renasceu com o avanço do deep learning (aprendizado profundo). Três pesquisadores são destacados como "pais do deep learning": Yoshua Bengio, Yann LeCun e Geoffrey Hinton, ganhadores do prêmio Turing. Fatores que impulsionaram esse renascimento: maior poder computacional Lei de Moore), disponibilidade de big data, avanços em redes neurais convolucionais (para imagens) e recorrentes (para sequências). Aplicações práticas surgiram, como assistentes virtuais Siri, Alexa, Google Assistant), sistemas de recomendação, chatbots e detecção de fraudes.


Arquivo: Resumo Aula 1 - O que uma IA de última geração pode fazer por vc.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 1 da Imersão IA da Alura, baseado no conteúdo oficial e fontes relacionadas: Poderia fazer resumo detalhado da Aula 1 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei? Aula 1 O que uma IA de última geração pode fazer por você? Apresentação do Google Gemini O Google Gemini é um modelo de linguagem de última geração LLM) que combina capacidades multimodais, ou seja, pode processar e gerar texto, imagens e outros tipos de dados simultaneamente. Ele é capaz de compreender e gerar textos com qualidade semelhante à humana, traduzir idiomas, criar conteúdos criativos, analisar sentimentos, gerar códigos e muito mais. O Gemini é acessível para usuários iniciantes por meio da plataforma gemini.google.com, que oferece uma interface de chat simples e gratuita para exploração. Para desenvolvedores e cientistas de dados, o AI Studio (aistudio.google.com) permite customização, codificação e integração avançada com APIs. Potencial e Aplicações Práticas A aula destaca como o Gemini pode ser usado para transformar o dia a dia profissional, automatizando tarefas repetitivas, acelerando processos criativos e facilitando a tomada de decisões. Exemplos de uso incluem criação de chatbots, geração de textos para marketing, análise de dados financeiros, suporte jurídico, entre outros. O foco é mostrar que a IA não substitui o profissional, mas aumenta sua autonomia e produtividade, funcionando como uma poderosa ferramenta de apoio. Engenharia de Prompts Um ponto central da aula é a importância da formulação correta dos prompts (instruções dadas à IA) para obter respostas eficazes. São apresentadas técnicas como: Zero-shot: pedir à IA para realizar uma tarefa sem exemplos prévios. Few-shot: fornecer alguns exemplos para guiar a resposta.Este resumo cobre os principais pontos da Aula 1, que apresenta o Google Gemini, suas capacidades, técnicas para interagir com IA e o caminho para aplicar esses conhecimentos na prática profissional. ⁂Chain of Thought: incentivar a IA a pensar passo a passo para resolver problemas complexos. A engenharia de prompts é essencial para maximizar o potencial do Gemini e criar interações mais precisas e úteis. Desenvolvimento Prático Os participantes são introduzidos à criação de chatbots usando a API do Gemini no Google AI Studio, aprendendo a construir sistemas que interagem com usuários de forma autônoma. Além disso, a aula prepara para o desenvolvimento de sistemas multi-agentes, onde múltiplos agentes de IA trabalham juntos para executar tarefas complexas sem intervenção constante. Benefícios da Imersão A imersão é gratuita, online e sem pré-requisitos, com aulas ministradas por especialistas da Alura e do Google, incluindo Valquíria Alencar, Fabrício Carraro e Luciano Martins. Ao final, os participantes recebem certificado Alura + Google e podem concorrer a prêmios com seus projetos. A comunidade exclusiva e as mentorias ajudam a aprofundar o aprendizado e a aplicação prática. 12 https://www.alura.com.br/artigos/imersao-ia https://pt.linkedin.com/pulse/imersão-alura-ai-com-google-gemini-marco-antonio-de-oliveira-filho--tic pf


Arquivo: Resumo Aula 2 - Como conversar com a IA e fazer ela trabalhar por vc.pdf
Segue o que foi discutido na aula:
Resposta: Claro! Aqui está um resumo detalhado da Aula 2 da Imersão IA da Alura, baseada no vídeo oficial (link para o vídeo): A aula 2 aprofunda o conceito de engenharia de prompt, mostrando como conversar de forma mais eficiente com modelos de IA (como o Google Gemini) para obter resultados melhores, mais precisos e úteis para o seu trabalho e projetos. na verdade a aula 2 da imersão foi outra: https://w ww.youtube.com/watch?v=BOfY6FKbqE&t=1s Aula 2 Como conversar com a IA e fazer ela trabalhar pra você

Foco da Aula
O que é Engenharia de Prompt? Prompt é a mensagem ou instrução que você envia para a IA. Engenharia de prompt é o processo de projetar essas instruções de forma clara, específica e detalhada, para que a IA entenda exatamente o que você deseja. A comparação feita é com um estagiário muito inteligente, mas sem experiência: quanto mais contexto e detalhes você der, melhor será a resposta.
Exemplos Práticos a) Solicitações Genéricas vs. Específicas Exemplo 1 Pedir “me fale sobre São Paulo” gera uma resposta muito ampla. Exemplo 2 Pedir “me fale sobre os três maiores clubes de futebol de São Paulo” já é mais específico e direciona melhor a resposta. Quanto mais detalhes no prompt, mais relevante será a resposta. b) Geração de Código Pedir simplesmente “crie um código para verificar se um ano é bissexto” pode resultar em uma resposta em Python, sem comentários. Se você especificar “crie um código em TypeScript, com comentários em cada linha”, a IA entrega exatamente o que você pediu, na linguagem e formato desejados.A Aula 2 ensina que a chave para tirar o máximo proveito da inteligência artificial está em como você conversa com ela. Aprender a construir prompts claros, detalhados e bem estruturados é o que transforma a IA em uma ferramenta poderosa para qualquer área profissional. Se quiser, posso sugerir exercícios práticos ou dicas para aplicar a engenharia de prompt no seu trabalho ou estudos! ⁂c) Campanha de Marketing Pedir “crie uma campanha de viagem para a Turquia” resulta em uma resposta genérica. Ao detalhar: “Trabalho para uma agência de viagens chamada Carrarurquia, crio campanhas para brasileiros entre 30 e 60 anos, interessados em história e cultura, focando em Istambul, Izmir e Capadócia”, a IA gera uma campanha muito mais alinhada ao público e objetivo.
Técnicas de Engenharia de Prompt Seja específico: Quanto mais detalhes você fornecer, melhor. Divida tarefas complexas: Se a tarefa for grande, divida em subtarefas e peça para a IA resolver uma de cada vez. Dê contexto: Explique quem você é, qual seu objetivo, para quem é a resposta. Teste e ajuste: Não tenha medo de experimentar diferentes formas de pedir até chegar ao resultado ideal.
Por que isso é importante? Modelos de IA são probabilísticos e podem interpretar prompts de formas diferentes. A clareza e especificidade do prompt aumentam a chance de obter respostas relevantes e aplicáveis ao seu contexto profissional. Essas técnicas ajudam a IA a se tornar uma verdadeira parceira de produtividade e criatividade.
Exercício Prático Os instrutores sugerem que você pratique criando prompts cada vez mais detalhados para tarefas do seu dia a dia, testando os resultados no Gemini. Experimente pedir para a IA gerar textos, códigos, campanhas, ou até mesmo dividir tarefas grandes em etapas menores. Resumo Final

Arquivo: Resumo Aula 3 – IA no seu dia a dia do Google Calendar ao Drive com Gemini.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 3 da Imersão IA da Alura, baseada no vídeo oficial: Poderia fazer resumo detalhado da Aula 3 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=PldyIefUPOg&t=1s Aula 3 IA no seu dia a dia: do Google Calendar ao Drive com Gemini

Integração do Google Gemini com o Ecossistema Google Ativação de Apps: A aula começa mostrando como ativar e conectar o Google Gemini a diversos serviços do Google Google Workspace), como Gmail, Google Drive, Google Docs, Google Calendar, Google Maps, Google Flights, Google Hotels, YouTube, entre outros. Configuração: É necessário acessar as configurações do Gemini e ativar os apps desejados, conectando com sua conta Google pessoal.
Produtividade com IA Automatizando Tarefas Cotidianas Criação de eventos no Google Calendar: Demonstração prática de como criar um evento no Google Calendar diretamente pelo Gemini, usando linguagem natural e o comando @Google Calendar. Exemplo: Criar um lembrete para a live de encerramento da imersão, especificando data e horário. Vantagem: A integração elimina a necessidade de copiar e colar informações entre aplicativos, centralizando as ações dentro do Gemini.
Planejamento de Viagem Integrado com IA Roteiro de Viagem: Utilização do Gemini para criar um roteiro de 10 dias pela Turquia, começando e terminando em Istambul. Uso do Google Maps: Solicitação para que o Gemini gere trajetos detalhados entre os pontos do roteiro,integrando com o Google Maps e fornecendo links diretos para as rotas. Personalização: O usuário pode ajustar o tipo de transporte (carro, transporte público, bicicleta, etc.) e horários diretamente pelo Maps.
Pesquisa de Voos e Hotéis com IA Google Flights Voos: O Gemini busca preços de voos para todos os trechos do roteiro, inclusive voos internacionais e domésticos, utilizando o comando @Google Voos (ou Flights). Refinamento: É possível pedir voos para datas e trechos específicos, e o Gemini retorna opções ordenadas por preço, escalas, etc. Google Hotels Hotéis: O Gemini sugere hotéis em cada cidade do roteiro, mostrando preços, opções de reserva e links para o Google Hotels, onde é possível ver fotos, avaliações e reservar.
Outras Aplicações Práticas Sugestões de Restaurantes: Com a integração ao Google Maps, é possível pedir recomendações de restaurantes por localização, tipo de culinária ou avaliação. Centralização de Ações: O objetivo é mostrar como a IA pode ser usada como central de produtividade, conectando e automatizando tarefas do cotidiano, desde organização pessoal até planejamento de viagens e reuniões.
Dicas e Boas Práticas Uso do “@”: Sempre que quiser acionar um serviço específico do Google, utilize o símbolo “@” seguido do nome do app (ex: @Google Calendar, @Google Maps). Linguagem Natural: A IA entende comandos em linguagem natural, facilitando a interação para quem não tem conhecimento técnico. Exploração: Incentivo para que os alunos explorem a integração com outros apps Google e testem comandos para automatizar tarefas do dia a dia.A Aula 3 mostra, na prática, como o Google Gemini pode ser integrado ao ecossistema Google para automatizar tarefas, organizar a rotina, planejar viagens e centralizar ações cotidianas usando IA. O foco é transformar a IA em uma verdadeira assistente pessoal e profissional, otimizando tempo e aumentando a produtividade. Se quiser, posso sugerir exercícios práticos para você experimentar essas integrações no seu dia a dia! ⁂Resumo Final

Arquivo: Resumo Aula 4 – Criando seu primeiro chatbot com IA generativa.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 4 da Imersão IA da Alura, baseada no vídeo oficial (assista aqui): Poderia fazer resumo detalhado da Aula 4 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=7xco9igjUAQ&t=1s Aula 4 Criando seu primeiro chatbot com IA generativa

Contexto e Motivação A aula marca o início do contato prático com programação, especialmente para quem nunca programou. Mostra que todos podem participar dos desafios e prêmios da imersão, independentemente do nível de conhecimento em programação. Traz depoimento de um ex-participante que não era desenvolvedor, mas venceu a edição anterior, incentivando todos a tentarem.
Revisão e Preparação Recapitula conceitos de Python ensinados na masterclass intermediária (variáveis, funções, operadores, ifs). Reforça a importância de aplicar o que é aprendido, não apenas assistir às aulas.
Google AI Studio e API Key Demonstra como obter e gerenciar a chave de API API Key) no Google AI Studio, essencial para conectar aplicações ao modelo Gemini. Mostra que é possível criar, copiar e apagar chaves conforme necessário.4. Grounding com Google Search Explica a limitação de conhecimento dos modelos de IA (data de corte do treinamento). Introduz o recurso “Grounding with Google Search”, que permite ao modelo buscar informações atualizadas na internet antes de responder, garantindo dados mais recentes e confiáveis. Exemplo prático: busca do resultado do último jogo Brasil x Argentina, mostrando a diferença entre resposta baseada apenas no modelo e resposta com grounding (incluindo fontes e links para validação).
Introdução ao Google Colab Apresenta o Google Colab, ambiente online e gratuito para programação em Python, onde todos podem acompanhar sem precisar instalar nada no computador. Explica vantagens do Colab: acessível, centralizado, com dependências já instaladas.
SDK e Instalação de Bibliotecas Explica o conceito de SDK Software Development Kit), que facilita a integração de aplicações com serviços como o Gemini. Ensina como instalar a SDK do Gemini no Colab usando o comando pip, facilitando o acesso à IA generativa via código.
Projeto Prático: Criando um Chatbot O objetivo prático da aula é criar um chatbot simples, conectando o Python ao Gemini usando a API Key. O chatbot será capaz de receber perguntas do usuário e retornar respostas geradas pela IA, tudo via código Python no Colab. Mostra passo a passo: conectar ambiente, instalar SDK, configurar chave de API, enviar perguntas e receber respostas.
Incentivo à Criatividade e Aplicação Encoraja os alunos a pensarem em soluções do cotidiano que podem ser resolvidas ou facilitadas com IA, mesmo sem serem grandes inovações. Destaca a importância de compartilhar projetos, pois o impacto pode ser significativo para outras pessoas.A Aula 4 é um divisor de águas na imersão: você aprende a conectar Python com a IA generativa do Google Gemini, cria seu primeiro chatbot e entende como buscar informações atualizadas usando grounding. O foco é desmistificar a programação, mostrar que todos podem criar soluções com IA e incentivar a aplicação prática do conhecimento. Se quiser, posso detalhar o passo a passo do código do chatbot apresentado na aula! ⁂Resumo Final

Arquivo: Resumo Aula 5 – Construindo agentes que resolvem tarefas por você.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 5 da Imersão IA da Alura, baseada no conteúdo do vídeo oficial que você indicou: Poderia fazer resumo detalhado da Aula 5 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=_CzMiNTDLMI Aula 5 Construindo agentes que resolvem tarefas por você

Introdução e Contexto A aula final da imersão apresenta o conceito e a construção de agentes de IA, que são sistemas capazes de executar tarefas complexas de forma autônoma, combinando múltiplas habilidades e interagindo com diferentes ferramentas. O foco é mostrar o poder dos agentes para profissionais de diversas áreas, como marketing, finanças, advocacia, e também para desenvolvedores. É o momento de aplicar os conhecimentos adquiridos nas aulas anteriores para construir sistemas multiagentes que podem ser usados no dia a dia.
Projeto Final e Desafio Os alunos são lembrados que o prazo para entrega do projeto final está aberto até sábado às 23h59. Após o envio, haverá votação na comunidade do Discord para escolher os melhores projetos, que serão avaliados pela banca da imersão. A live de encerramento será na segunda-feira, com anúncio dos vencedores e apresentação de uma condição especial para assinatura da Alura.
Ferramentas e Preparação A aula utiliza o Google AI Studio e o ambiente Google Colab para desenvolvimento. Reforça-se a necessidade da API Key para conectar o código ao modelo Gemini. Ao invés de começar o código do zero, os alunos recebem um notebook Colab pré-pronto com um framework para agentes, facilitando o uso e a customização, mesmo para quem não tem muita experiência em programação.4. Framework ADK Agent Development Kit) Apresentação do ADK, kit de desenvolvimento de agentes lançado pelo Google. O ADK facilita a criação e orquestração de agentes, permitindo que múltiplos agentes trabalhem em conjunto para resolver tarefas complexas. O framework já vem com várias funcionalidades prontas, reduzindo o esforço de programação e permitindo foco na lógica do negócio.
Conexão com Google Search e Grounding Explicação sobre a limitação do conhecimento dos modelos de IA (data de corte do treinamento). Demonstração de como integrar a busca do Google Google Search) para que o agente possa acessar informações atualizadas em tempo real - recurso chamado grounding. Exemplo prático: perguntar ao agente sobre eventos recentes, que não estão no conhecimento estático do modelo, e obter respostas com fontes e links.
Configuração e Uso do Colab Passos para criar uma cópia do notebook no Google Drive e trabalhar na própria versão. Configuração das variáveis de ambiente para armazenar a API Key de forma segura. Instalação da biblioteca google-genai para usar o SDK do Gemini. Inicialização do cliente Gemini e definição do modelo a ser usado.
Construção do Agente Demonstração passo a passo do código para criar um agente simples que responde a perguntas usando Gemini e Google Search. Explicação da estrutura do código, incluindo como definir as ferramentas que o agente pode usar. Uso do parâmetro config para ativar a busca do Google dentro das chamadas ao modelo. O agente pode buscar informações na internet, analisar e sintetizar respostas, tornando-se muito mais útil e atualizado.
Personalização e Extensão O notebook pré-pronto permite que os alunos alterem o agente para casos de uso específicos, como atendimento ao cliente, assistente pessoal, análise de dados, entre outros.A Aula 5 fecha a imersão mostrando como construir agentes inteligentes usando o Google Gemini e o ADK, integrando capacidades de busca e orquestração para resolver tarefas complexas de forma autônoma. É uma aula prática, com código pronto para facilitar o aprendizado, e que prepara o aluno para aplicar IA generativa em projetos reais, ampliando sua produtividade e impacto profissional. Se quiser, posso ajudar a detalhar o código do agente ou sugerir ideias para seu projeto final! ⁂Incentivo para explorar o framework, criar múltiplos agentes e orquestrá-los para tarefas mais complexas. Encorajamento para compartilhar os projetos e continuar aprendendo.
Encerramento e Próximos Passos A equipe reforça a importância de praticar e aplicar o que foi aprendido. Lembra que a imersão é apenas o começo e que há muitos cursos e formações na Alura para aprofundar conhecimentos em IA, ciência de dados, programação e outras áreas. Convite para a live de encerramento, onde serão anunciados os vencedores e discutidos os próximos passos no universo da inteligência artificial. Resumo Final
"""

cola_para_os_brothers = """
Encontrei 6 arquivos PDF na pasta '/content/drive/MyDrive/Imersão IA da Alura':

Arquivo: Resumo Aula 0 - MasterClass - Como a IA aprendeu a falar.pdf
Segue o que foi discutido na aula:
Resposta: Aula 0 = https://youtu.be/_xV9Pcvkq_Y Aula 1 = https://www.youtube.com/watch?v=PzTBbxEGmYo Aula 2 = https://youtu.be/BOfY6FKbqE Aula 3 = https://www.youtube.com/watch?v=PldyIefUPOg&t=1s Aula 4 = https://www.youtube.com/watch?v=7xco9igjUAQ&t=1s Aula 5 = https://www.youtube.com/watch?v=_CzMiNTDLMI Aqui está um resumo detalhado da Aula 0 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial: Olá, seguem os links dos videos da imersão IA da Alura: Aula 0 Introdução e História da Inteligência Artificial Objetivo da aula: Preparar os alunos para a imersão, apresentando a história da inteligência artificial IA) desde a origem do termo até os avanços recentes, além de introduzir uma ferramenta de estudo inovadora. Ferramenta NotebookLM do Google: Uma ferramenta que permite importar e organizar conteúdos de diversas fontes PDFs, sites, vídeos, documentos) para estudo assistido por IA. Pode gerar mapas mentais, resumos, notas e responder perguntas baseadas no material importado, facilitando o aprendizado. História da IA Primórdios (pré-1950 A ideia de máquinas pensantes tem raízes antigas, mas o marco inicial real é a invenção do computador digital na década de 1940. Em 1943, McCulloch e Pitts criaram o modelo matemático do neurônio artificial, inspirado no funcionamento do cérebro humano, usando lógica binária. Alan Turing, considerado o pai da computação, publicou em 1950 o artigo "Computing Machinery and Intelligence", propondo o Teste de Turing para avaliar se uma máquina pode exibir comportamento inteligente indistinguível do humano. Década de 1950Este resumo da Aula 0 traz uma visão geral da evolução da IA, preparando os alunos para entender os conceitos e tecnologias atuais. Se desejar, posso preparar resumos similares para as outras aulas 1 a 5) com base nos conteúdos disponíveis. ⁂Em 1956, na conferência de Dartmouth, John McCarthy cunhou o termo "inteligência artificial". Os primeiros programas de xadrez e os primeiros sistemas baseados em redes neurais foram desenvolvidos. Décadas de 1960 e 1970 Houve grande entusiasmo com sistemas especialistas e chatbots primitivos, como o ELIZA, que simulava conversas simples. Porém, as limitações técnicas e o poder computacional insuficiente levaram a dificuldades para resolver problemas complexos. Invernos da IA Nos anos 70 e final dos anos 80, ocorreram períodos chamados "invernos da IA", quando o interesse e o financiamento diminuíram devido a expectativas não cumpridas e limitações técnicas. Renascimento no século 21 A partir dos anos 2000, a IA renasceu com o avanço do deep learning (aprendizado profundo). Três pesquisadores são destacados como "pais do deep learning": Yoshua Bengio, Yann LeCun e Geoffrey Hinton, ganhadores do prêmio Turing. Fatores que impulsionaram esse renascimento: maior poder computacional Lei de Moore), disponibilidade de big data, avanços em redes neurais convolucionais (para imagens) e recorrentes (para sequências). Aplicações práticas surgiram, como assistentes virtuais Siri, Alexa, Google Assistant), sistemas de recomendação, chatbots e detecção de fraudes.


Arquivo: Resumo Aula 1 - O que uma IA de última geração pode fazer por vc.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 1 da Imersão IA da Alura, baseado no conteúdo oficial e fontes relacionadas: Poderia fazer resumo detalhado da Aula 1 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei? Aula 1 O que uma IA de última geração pode fazer por você? Apresentação do Google Gemini O Google Gemini é um modelo de linguagem de última geração LLM) que combina capacidades multimodais, ou seja, pode processar e gerar texto, imagens e outros tipos de dados simultaneamente. Ele é capaz de compreender e gerar textos com qualidade semelhante à humana, traduzir idiomas, criar conteúdos criativos, analisar sentimentos, gerar códigos e muito mais. O Gemini é acessível para usuários iniciantes por meio da plataforma gemini.google.com, que oferece uma interface de chat simples e gratuita para exploração. Para desenvolvedores e cientistas de dados, o AI Studio (aistudio.google.com) permite customização, codificação e integração avançada com APIs. Potencial e Aplicações Práticas A aula destaca como o Gemini pode ser usado para transformar o dia a dia profissional, automatizando tarefas repetitivas, acelerando processos criativos e facilitando a tomada de decisões. Exemplos de uso incluem criação de chatbots, geração de textos para marketing, análise de dados financeiros, suporte jurídico, entre outros. O foco é mostrar que a IA não substitui o profissional, mas aumenta sua autonomia e produtividade, funcionando como uma poderosa ferramenta de apoio. Engenharia de Prompts Um ponto central da aula é a importância da formulação correta dos prompts (instruções dadas à IA) para obter respostas eficazes. São apresentadas técnicas como: Zero-shot: pedir à IA para realizar uma tarefa sem exemplos prévios. Few-shot: fornecer alguns exemplos para guiar a resposta.Este resumo cobre os principais pontos da Aula 1, que apresenta o Google Gemini, suas capacidades, técnicas para interagir com IA e o caminho para aplicar esses conhecimentos na prática profissional. ⁂Chain of Thought: incentivar a IA a pensar passo a passo para resolver problemas complexos. A engenharia de prompts é essencial para maximizar o potencial do Gemini e criar interações mais precisas e úteis. Desenvolvimento Prático Os participantes são introduzidos à criação de chatbots usando a API do Gemini no Google AI Studio, aprendendo a construir sistemas que interagem com usuários de forma autônoma. Além disso, a aula prepara para o desenvolvimento de sistemas multi-agentes, onde múltiplos agentes de IA trabalham juntos para executar tarefas complexas sem intervenção constante. Benefícios da Imersão A imersão é gratuita, online e sem pré-requisitos, com aulas ministradas por especialistas da Alura e do Google, incluindo Valquíria Alencar, Fabrício Carraro e Luciano Martins. Ao final, os participantes recebem certificado Alura + Google e podem concorrer a prêmios com seus projetos. A comunidade exclusiva e as mentorias ajudam a aprofundar o aprendizado e a aplicação prática. 12 https://www.alura.com.br/artigos/imersao-ia https://pt.linkedin.com/pulse/imersão-alura-ai-com-google-gemini-marco-antonio-de-oliveira-filho--tic pf


Arquivo: Resumo Aula 2 - Como conversar com a IA e fazer ela trabalhar por vc.pdf
Segue o que foi discutido na aula:
Resposta: Claro! Aqui está um resumo detalhado da Aula 2 da Imersão IA da Alura, baseada no vídeo oficial (link para o vídeo): A aula 2 aprofunda o conceito de engenharia de prompt, mostrando como conversar de forma mais eficiente com modelos de IA (como o Google Gemini) para obter resultados melhores, mais precisos e úteis para o seu trabalho e projetos. na verdade a aula 2 da imersão foi outra: https://w ww.youtube.com/watch?v=BOfY6FKbqE&t=1s Aula 2 Como conversar com a IA e fazer ela trabalhar pra você

Foco da Aula
O que é Engenharia de Prompt? Prompt é a mensagem ou instrução que você envia para a IA. Engenharia de prompt é o processo de projetar essas instruções de forma clara, específica e detalhada, para que a IA entenda exatamente o que você deseja. A comparação feita é com um estagiário muito inteligente, mas sem experiência: quanto mais contexto e detalhes você der, melhor será a resposta.
Exemplos Práticos a) Solicitações Genéricas vs. Específicas Exemplo 1 Pedir “me fale sobre São Paulo” gera uma resposta muito ampla. Exemplo 2 Pedir “me fale sobre os três maiores clubes de futebol de São Paulo” já é mais específico e direciona melhor a resposta. Quanto mais detalhes no prompt, mais relevante será a resposta. b) Geração de Código Pedir simplesmente “crie um código para verificar se um ano é bissexto” pode resultar em uma resposta em Python, sem comentários. Se você especificar “crie um código em TypeScript, com comentários em cada linha”, a IA entrega exatamente o que você pediu, na linguagem e formato desejados.A Aula 2 ensina que a chave para tirar o máximo proveito da inteligência artificial está em como você conversa com ela. Aprender a construir prompts claros, detalhados e bem estruturados é o que transforma a IA em uma ferramenta poderosa para qualquer área profissional. Se quiser, posso sugerir exercícios práticos ou dicas para aplicar a engenharia de prompt no seu trabalho ou estudos! ⁂c) Campanha de Marketing Pedir “crie uma campanha de viagem para a Turquia” resulta em uma resposta genérica. Ao detalhar: “Trabalho para uma agência de viagens chamada Carrarurquia, crio campanhas para brasileiros entre 30 e 60 anos, interessados em história e cultura, focando em Istambul, Izmir e Capadócia”, a IA gera uma campanha muito mais alinhada ao público e objetivo.
Técnicas de Engenharia de Prompt Seja específico: Quanto mais detalhes você fornecer, melhor. Divida tarefas complexas: Se a tarefa for grande, divida em subtarefas e peça para a IA resolver uma de cada vez. Dê contexto: Explique quem você é, qual seu objetivo, para quem é a resposta. Teste e ajuste: Não tenha medo de experimentar diferentes formas de pedir até chegar ao resultado ideal.
Por que isso é importante? Modelos de IA são probabilísticos e podem interpretar prompts de formas diferentes. A clareza e especificidade do prompt aumentam a chance de obter respostas relevantes e aplicáveis ao seu contexto profissional. Essas técnicas ajudam a IA a se tornar uma verdadeira parceira de produtividade e criatividade.
Exercício Prático Os instrutores sugerem que você pratique criando prompts cada vez mais detalhados para tarefas do seu dia a dia, testando os resultados no Gemini. Experimente pedir para a IA gerar textos, códigos, campanhas, ou até mesmo dividir tarefas grandes em etapas menores. Resumo Final

Arquivo: Resumo Aula 3 – IA no seu dia a dia do Google Calendar ao Drive com Gemini.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 3 da Imersão IA da Alura, baseada no vídeo oficial: Poderia fazer resumo detalhado da Aula 3 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=PldyIefUPOg&t=1s Aula 3 IA no seu dia a dia: do Google Calendar ao Drive com Gemini

Integração do Google Gemini com o Ecossistema Google Ativação de Apps: A aula começa mostrando como ativar e conectar o Google Gemini a diversos serviços do Google Google Workspace), como Gmail, Google Drive, Google Docs, Google Calendar, Google Maps, Google Flights, Google Hotels, YouTube, entre outros. Configuração: É necessário acessar as configurações do Gemini e ativar os apps desejados, conectando com sua conta Google pessoal.
Produtividade com IA Automatizando Tarefas Cotidianas Criação de eventos no Google Calendar: Demonstração prática de como criar um evento no Google Calendar diretamente pelo Gemini, usando linguagem natural e o comando @Google Calendar. Exemplo: Criar um lembrete para a live de encerramento da imersão, especificando data e horário. Vantagem: A integração elimina a necessidade de copiar e colar informações entre aplicativos, centralizando as ações dentro do Gemini.
Planejamento de Viagem Integrado com IA Roteiro de Viagem: Utilização do Gemini para criar um roteiro de 10 dias pela Turquia, começando e terminando em Istambul. Uso do Google Maps: Solicitação para que o Gemini gere trajetos detalhados entre os pontos do roteiro,integrando com o Google Maps e fornecendo links diretos para as rotas. Personalização: O usuário pode ajustar o tipo de transporte (carro, transporte público, bicicleta, etc.) e horários diretamente pelo Maps.
Pesquisa de Voos e Hotéis com IA Google Flights Voos: O Gemini busca preços de voos para todos os trechos do roteiro, inclusive voos internacionais e domésticos, utilizando o comando @Google Voos (ou Flights). Refinamento: É possível pedir voos para datas e trechos específicos, e o Gemini retorna opções ordenadas por preço, escalas, etc. Google Hotels Hotéis: O Gemini sugere hotéis em cada cidade do roteiro, mostrando preços, opções de reserva e links para o Google Hotels, onde é possível ver fotos, avaliações e reservar.
Outras Aplicações Práticas Sugestões de Restaurantes: Com a integração ao Google Maps, é possível pedir recomendações de restaurantes por localização, tipo de culinária ou avaliação. Centralização de Ações: O objetivo é mostrar como a IA pode ser usada como central de produtividade, conectando e automatizando tarefas do cotidiano, desde organização pessoal até planejamento de viagens e reuniões.
Dicas e Boas Práticas Uso do “@”: Sempre que quiser acionar um serviço específico do Google, utilize o símbolo “@” seguido do nome do app (ex: @Google Calendar, @Google Maps). Linguagem Natural: A IA entende comandos em linguagem natural, facilitando a interação para quem não tem conhecimento técnico. Exploração: Incentivo para que os alunos explorem a integração com outros apps Google e testem comandos para automatizar tarefas do dia a dia.A Aula 3 mostra, na prática, como o Google Gemini pode ser integrado ao ecossistema Google para automatizar tarefas, organizar a rotina, planejar viagens e centralizar ações cotidianas usando IA. O foco é transformar a IA em uma verdadeira assistente pessoal e profissional, otimizando tempo e aumentando a produtividade. Se quiser, posso sugerir exercícios práticos para você experimentar essas integrações no seu dia a dia! ⁂Resumo Final

Arquivo: Resumo Aula 4 – Criando seu primeiro chatbot com IA generativa.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 4 da Imersão IA da Alura, baseada no vídeo oficial (assista aqui): Poderia fazer resumo detalhado da Aula 4 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=7xco9igjUAQ&t=1s Aula 4 Criando seu primeiro chatbot com IA generativa

Contexto e Motivação A aula marca o início do contato prático com programação, especialmente para quem nunca programou. Mostra que todos podem participar dos desafios e prêmios da imersão, independentemente do nível de conhecimento em programação. Traz depoimento de um ex-participante que não era desenvolvedor, mas venceu a edição anterior, incentivando todos a tentarem.
Revisão e Preparação Recapitula conceitos de Python ensinados na masterclass intermediária (variáveis, funções, operadores, ifs). Reforça a importância de aplicar o que é aprendido, não apenas assistir às aulas.
Google AI Studio e API Key Demonstra como obter e gerenciar a chave de API API Key) no Google AI Studio, essencial para conectar aplicações ao modelo Gemini. Mostra que é possível criar, copiar e apagar chaves conforme necessário.4. Grounding com Google Search Explica a limitação de conhecimento dos modelos de IA (data de corte do treinamento). Introduz o recurso “Grounding with Google Search”, que permite ao modelo buscar informações atualizadas na internet antes de responder, garantindo dados mais recentes e confiáveis. Exemplo prático: busca do resultado do último jogo Brasil x Argentina, mostrando a diferença entre resposta baseada apenas no modelo e resposta com grounding (incluindo fontes e links para validação).
Introdução ao Google Colab Apresenta o Google Colab, ambiente online e gratuito para programação em Python, onde todos podem acompanhar sem precisar instalar nada no computador. Explica vantagens do Colab: acessível, centralizado, com dependências já instaladas.
SDK e Instalação de Bibliotecas Explica o conceito de SDK Software Development Kit), que facilita a integração de aplicações com serviços como o Gemini. Ensina como instalar a SDK do Gemini no Colab usando o comando pip, facilitando o acesso à IA generativa via código.
Projeto Prático: Criando um Chatbot O objetivo prático da aula é criar um chatbot simples, conectando o Python ao Gemini usando a API Key. O chatbot será capaz de receber perguntas do usuário e retornar respostas geradas pela IA, tudo via código Python no Colab. Mostra passo a passo: conectar ambiente, instalar SDK, configurar chave de API, enviar perguntas e receber respostas.
Incentivo à Criatividade e Aplicação Encoraja os alunos a pensarem em soluções do cotidiano que podem ser resolvidas ou facilitadas com IA, mesmo sem serem grandes inovações. Destaca a importância de compartilhar projetos, pois o impacto pode ser significativo para outras pessoas.A Aula 4 é um divisor de águas na imersão: você aprende a conectar Python com a IA generativa do Google Gemini, cria seu primeiro chatbot e entende como buscar informações atualizadas usando grounding. O foco é desmistificar a programação, mostrar que todos podem criar soluções com IA e incentivar a aplicação prática do conhecimento. Se quiser, posso detalhar o passo a passo do código do chatbot apresentado na aula! ⁂Resumo Final

Arquivo: Resumo Aula 5 – Construindo agentes que resolvem tarefas por você.pdf
Segue o que foi discutido na aula:
Resposta: Aqui está um resumo detalhado da Aula 5 da Imersão IA da Alura, baseada no conteúdo do vídeo oficial que você indicou: Poderia fazer resumo detalhado da Aula 5 da Imersão IA da Alura, baseado no conteúdo do vídeo oficial que passei: https://www.youtube.com/ watch?v=_CzMiNTDLMI Aula 5 Construindo agentes que resolvem tarefas por você

Introdução e Contexto A aula final da imersão apresenta o conceito e a construção de agentes de IA, que são sistemas capazes de executar tarefas complexas de forma autônoma, combinando múltiplas habilidades e interagindo com diferentes ferramentas. O foco é mostrar o poder dos agentes para profissionais de diversas áreas, como marketing, finanças, advocacia, e também para desenvolvedores. É o momento de aplicar os conhecimentos adquiridos nas aulas anteriores para construir sistemas multiagentes que podem ser usados no dia a dia.
Projeto Final e Desafio Os alunos são lembrados que o prazo para entrega do projeto final está aberto até sábado às 23h59. Após o envio, haverá votação na comunidade do Discord para escolher os melhores projetos, que serão avaliados pela banca da imersão. A live de encerramento será na segunda-feira, com anúncio dos vencedores e apresentação de uma condição especial para assinatura da Alura.
Ferramentas e Preparação A aula utiliza o Google AI Studio e o ambiente Google Colab para desenvolvimento. Reforça-se a necessidade da API Key para conectar o código ao modelo Gemini. Ao invés de começar o código do zero, os alunos recebem um notebook Colab pré-pronto com um framework para agentes, facilitando o uso e a customização, mesmo para quem não tem muita experiência em programação.4. Framework ADK Agent Development Kit) Apresentação do ADK, kit de desenvolvimento de agentes lançado pelo Google. O ADK facilita a criação e orquestração de agentes, permitindo que múltiplos agentes trabalhem em conjunto para resolver tarefas complexas. O framework já vem com várias funcionalidades prontas, reduzindo o esforço de programação e permitindo foco na lógica do negócio.
Conexão com Google Search e Grounding Explicação sobre a limitação do conhecimento dos modelos de IA (data de corte do treinamento). Demonstração de como integrar a busca do Google Google Search) para que o agente possa acessar informações atualizadas em tempo real - recurso chamado grounding. Exemplo prático: perguntar ao agente sobre eventos recentes, que não estão no conhecimento estático do modelo, e obter respostas com fontes e links.
Configuração e Uso do Colab Passos para criar uma cópia do notebook no Google Drive e trabalhar na própria versão. Configuração das variáveis de ambiente para armazenar a API Key de forma segura. Instalação da biblioteca google-genai para usar o SDK do Gemini. Inicialização do cliente Gemini e definição do modelo a ser usado.
Construção do Agente Demonstração passo a passo do código para criar um agente simples que responde a perguntas usando Gemini e Google Search. Explicação da estrutura do código, incluindo como definir as ferramentas que o agente pode usar. Uso do parâmetro config para ativar a busca do Google dentro das chamadas ao modelo. O agente pode buscar informações na internet, analisar e sintetizar respostas, tornando-se muito mais útil e atualizado.
Personalização e Extensão O notebook pré-pronto permite que os alunos alterem o agente para casos de uso específicos, como atendimento ao cliente, assistente pessoal, análise de dados, entre outros.A Aula 5 fecha a imersão mostrando como construir agentes inteligentes usando o Google Gemini e o ADK, integrando capacidades de busca e orquestração para resolver tarefas complexas de forma autônoma. É uma aula prática, com código pronto para facilitar o aprendizado, e que prepara o aluno para aplicar IA generativa em projetos reais, ampliando sua produtividade e impacto profissional. Se quiser, posso ajudar a detalhar o código do agente ou sugerir ideias para seu projeto final! ⁂Incentivo para explorar o framework, criar múltiplos agentes e orquestrá-los para tarefas mais complexas. Encorajamento para compartilhar os projetos e continuar aprendendo.
Encerramento e Próximos Passos A equipe reforça a importância de praticar e aplicar o que foi aprendido. Lembra que a imersão é apenas o começo e que há muitos cursos e formações na Alura para aprofundar conhecimentos em IA, ciência de dados, programação e outras áreas. Convite para a live de encerramento, onde serão anunciados os vencedores e discutidos os próximos passos no universo da inteligência artificial. Resumo Final
"""

# Deveria vender esse resumo, mas o que vem de graça, vai de graça. #ObrigadoAlura

display(Markdown(f"Resposta:\n {cola_para_os_brothers}"))

"""A PARTIR DE AGORA, VOU DAR AQUELA CHUPINHADA BÁSICA NO CÓDIGO DA AULA 5 PARA CRIAR MEU AGENTE, PORQUE DE BOA: NESTA VIDA NADA SE CRIA, TUDO SE COPIA (QUE O GEMINI NÃO ME ESCUTE!!! KKKK)"""

# Função auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final
def call_agent(agent: Agent, message_text: str) -> str:
    # Cria um serviço de sessão em memória
    session_service = InMemorySessionService()
    # Cria uma nova sessão (você pode personalizar os IDs conforme necessário)
    session = session_service.create_session(app_name=agent.name, user_id="user1", session_id="session1")
    # Cria um Runner para o agente
    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)
    # Cria o conteúdo da mensagem de entrada
    content = types.Content(role="user", parts=[types.Part(text=message_text)])

    final_response = ""
    # Itera assincronamente pelos eventos retornados durante a execução do agente
    for event in runner.run(user_id="user1", session_id="session1", new_message=content):
        if event.is_final_response():
          for part in event.content.parts:
            if part.text is not None:
              final_response += part.text
              final_response += "\n"
    return final_response

# Função auxiliar para exibir texto formatado em Markdown no Colab
def to_markdown(text):
  text = text.replace('•', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

##########################################
# --- Agente 1: Identifica habilitades aprendidas --- #
##########################################
def agente_identificaHabilidades(resumoAulasImersao):
    identificaHabilidades = Agent(
        name="agente_identificaHabilidades",
        model="gemini-2.0-flash",
        instruction="""
        Você é um coach de carreiras de IA. A sua tarefa é usar a ferramenta de busca do google (google_search) para,
        baseado no resumo das aulas que te passarei da imersão de IA da Alura de 2025,  buscar no google uma lista de
        habilidades de inteligencia artificial mais relevantes para 2025.

        Foque em no máximo 10 habilidades relevantes, com base na necessidade de mercado para 2025 para estas habilidades de IA
        e aderencia ao que foi dado no curso, pois não adianta você destacar uma habilidade que o mercado precisa mas que não foi trabalhada na imersão.

        Se a habilidade for pouco necessaria para a atualidade mas foi muito discutida nas aulas, não me retorne esta habilidade e pode ser substituído
        por outra mais aderente às aulas dadas na imersão.
        """,
        description="Agente que identifica habilidades que o mercado precisa e que aprendemos na Imersão IA da Alura",
        tools={google_search}
    )

    entrada_do_agente_habilidades = f"Resumo: {resumoAulasImersao}"
    # Executa o agente
    habilidadesIdentificadas = call_agent(identificaHabilidades, entrada_do_agente_habilidades)
    return habilidadesIdentificadas

######################################
# --- Agente 2: Redator do Post --- #
######################################
def agente_redator(habilidades):
    redator = Agent(
        name="agente_redator",
        model="gemini-2.0-flash",
        instruction="""
            Você é um Redator Criativo especializado em criar posts virais para redes sociais.

            Você escreve posts informando o que os participantes aprenderam durante a imersão IA com Google Gemini ministrado pela empresa Alura, a maior escola online de tecnologia do Brasil.

            Utilize as habilidades fornecidas e os pontos mais relevantes fornecidos e, com base nisso,
            escreva um rascunho de post para linkedin sobre o tema indicado.

            O post deve ser engajador, informativo, com linguagem profissional e incluir no final as hashtags: "Imersaoiagoogle" e "HumanInTheLoop"
            """,
        description="Agente redator de posts engajadores para Instagram"
    )
    entrada_do_agente_redator = f"Plano de post: {habilidades}"
    # Executa o agente
    rascunho = call_agent(redator, entrada_do_agente_redator)
    return rascunho

##########################################
# --- Agente 3: Revisor de Qualidade --- #
##########################################
def agente_revisor(rascunho_gerado):
    revisor = Agent(
        name="agente_revisor",
        model="gemini-2.0-flash",
        instruction="""
            Você é um Editor e Revisor de Conteúdo meticuloso, especializado em posts para redes sociais, com foco no Linkedin.

            Por ter um público voltado ao mercado de trabalho e sabendo que o objetivo é que este post
            seja visto por RHs de empresa e pelo networking/contatos do linkedin dos participantes da imersão IA com Google Gemini
            ministrado pela empresa Alura, a maior escola online de tecnologia do Brasil, use um tom de escrita adequado com foco em ser informativo.

            Revise o rascunho de post de Linkedin que vou te passar, verificando clareza, concisão, correção e tom profissional.

            Revise que está seguindo aos padrões de ética, respeito, privacidade, transparência e responsabilidade da IA.

            Lembre-se de revisar que a abordagem do post é informar as habilidades adquiridas, o que significa que o participante
            ainda não é um expert, mas considere que ele foi um participante assiduo e que praticou todos os questionários,exercícios e
            seguiu as recomendações dos instrutores da Alura durante a imersão de IA.

            Não use emojis para manter o tom profissional e gere apenas 3 hashtags mais relevantes, entre elas alura e human in the loop

            Inclua antes de agradecer à alura um call to action do tipo:

            Estou buscando oportunidades na área de IA e gostaria de conectar com
            profissionais e empresas que estejam liderando a inovação nesse campo.
            Se você tiver alguma sugestão ou oportunidade, entre em contato comigo!"

            Se o rascunho estiver bom, responda apenas 'O rascunho está ótimo e pronto para publicar!'.
            Caso haja problemas, aponte-os e sugira melhorias

            Após finalizar, gere a versão final também em inglês, pois talves alguns participantes prefiram postar em inglês
            """,
        description="Agente revisor de post para redes sociais."
    )
    entrada_do_agente_revisor = f"Rascunho: {rascunho_gerado}"
    # Executa o agente
    texto_revisado = call_agent(revisor, entrada_do_agente_revisor)
    return texto_revisado

##########################################
# --- Agente 4: Identifica Aplicabilidade da IA na Área do Usuário --- #
##########################################
def agente_identificaAplicabilidade(area, habilidades):
    identificaHabilidades = Agent(
        name="agente_identificaAplicabilidade",
        model="gemini-2.0-flash",
        instruction="""
        Você é um arquiteto de soluções em Inteligencia Atigicial Generativa. A sua tarefa é usar a ferramenta de busca do google (google_search) para,
        baseado em duas informações que te passarei:
        habilidades adquiridas durante a imersão de IA da Alura com Google Gemini de 2025 e na area de atuação do usuario,
        buscar no google uma lista de possíveis aplicações de inteligencia artificial nestas áreas.

        Foque em no máximo 10 aplicabilidades mais relevantes para a atualidade, realidade de cada área de atuação
        e maiores necessidades de mercado para 2025 nesta area, pois não adianta você destacar uma aplicabilidade que não é tendencia de mercado em 2025.

        Lembre-se de utilizar padrões de ética, respeito, privacidade, transparência e responsabilidade da IA.

        Se a aplicabilidade for pouco necessaria para a atualidade, pode ser substituída por outra mais necessária para a reallidade desta área de atuação
        """,
        description="Agente que identifica aplicabilidade das habilidades adquiridas, conforme área de atuação do participante da imersão",
        tools={google_search}
    )

    entrada_do_agente_aplicabilidades = f"Habilidades: {habilidades}\nÁrea de Atuação: {area}"
    # Executa o agente
    aplicabilidadesIdentificadas = call_agent(identificaHabilidades, entrada_do_agente_aplicabilidades)
    return aplicabilidadesIdentificadas

##########################################
# --- Agente 5: Identifica Cursos de IA da Alura na Área do Usuário --- #
##########################################
def agente_identificaCursosIA(area):
    identificaCursosIA = Agent(
        name="agente_identificaCursosIA",
        model="gemini-2.0-flash",
        instruction="""
        Você é um coordenador de cursos da Alura em Inteligencia Atigicial Generativa. A sua tarefa é usar a ferramenta de
        busca do google (google_search) para, baseado na área de atuação que te informarei,
        buscar no site da Alura por cursos de IA mais relevantes para a área de atuação do participante da imersão de IA da Alura
        com Google Gemini de 2025.

        Foque em no máximo 3 cursos, mas somente se estiverem aderentes à area de atuação do participante e se estiverem relacionados a IA.

        Se a curso for pouco aderente à área de atuação, pode ser substituída por outro mais relevante à area dele
        """,
        description="Agente que identifica cursos da Alura para o participante da imersão",
        tools={google_search}
    )

    entrada_do_agente_identifica_cursos = f"Área de Atuação: {area}"
    # Executa o agente
    cursosIdentificados = call_agent(identificaCursosIA, entrada_do_agente_identifica_cursos)
    return cursosIdentificados

print("🚀 Iniciando o Sistema de 5 agentes que Fecha com Chave de Ouro a tua participação na Imersão IA 2025 da Alura com Google Gemini 🚀")
print("\n Vamos te compartilhar um resumo do que foi trabalhado, te ajudar com aplicabilidade do que aprendeu na Imersão e sugerir um texto para post no Linkedin:")

# --- Obter o Área de Atuação do Usuário ---
area_atuacao = input("\n❓ Por favor, digite a tua ÁREA DE ATUAÇÃO: ")

# Inserir lógica do sistema de agentes ################################################
if not area_atuacao:
    print("Você esqueceu de digitar o tópico!")
else:
    print(f"Maravilha! Vamos começar ...")

habilidades = agente_identificaHabilidades(cola_para_os_brothers)
print("\n--- 📝 Resultado do Agente 1 (Identifica Habilidades Adquiridas na Imersão) ---\n")
display(Markdown(f"Resposta:\n {habilidades}"))
print("--------------------------------------------------------------")

rascunhoLinkedin = agente_redator(habilidades)
print("\n--- 📝 Resultado do Agente 2 (Redator de Post Linkedin) ---\n")
display(Markdown(f"Resposta:\n {rascunhoLinkedin}"))
print("--------------------------------------------------------------")

postFinalLinkedin = agente_revisor(rascunhoLinkedin)
print("\n--- 📝 Resultado do Agente 3 (Revisor de Qualidade) ---\n")
display(Markdown(f"Resposta:\n {postFinalLinkedin}"))

aplicabilidades = agente_identificaAplicabilidade(area_atuacao, habilidades)
print("\n--- 📝 Resultado do Agente 4 (Identifica Aplicabilidade) ---\n")
display(Markdown(f"Resposta:\n {aplicabilidades}"))
print("--------------------------------------------------------------")

cursos = agente_identificaCursosIA(area_atuacao)
print("\n--- 📝 Indicação de Treinamentos IA Alura (Identifica Cursos) ---\n")
display(Markdown(f"Resposta:\n {cursos}"))
print("--------------------------------------------------------------")